Numero de referencias. -X
goto: se ejecuta la etiqueta dos veces -X
check tipos -X
bloques de una sentencia -X
operador de salida estandar sin intro. -X
Imprimir null no haga nada. -X
Bucles aguiles anidados en funciones diferentes. 
break solo en sentencias iterativas. -X
Número de líneas de errores. -X
Qutar sizeOf
Repasar lista de palabras reservadas y ubicarlas en el manual de usuario
catch multiples y por tipos. Actualizar doc
Funciones con número de parámetros variables. 
Llamadas como array
referencias de posiciones de arrays. -X
funciones sobre array 
Todo es un objeto

Métodos estáticos y privados a la vez fallan

Herencia de constructores. Recuerda Quiz.lsh

Costructor de clase privado -X 

return referencia de variable local. -X

obj->getRef() = 20 => Es sintácticamente erróneo

%~ \begin{lstlisting}
%~ |{\color{red}\emph{}}|
%~ |\color{gray75}{}|
%~ \end{lstlisting}

NO FUFA;: SIEMPRE TOMA EL PRIMER VALOR DE X (functionNode se ejecutaba una vez, testing)
~ addX (X) {
      return ~(num) {
         return num + X; // Variable del entorno en el que se encuentra la definici|\color{gray75}{ó}|n de la funci|\color{gray75}{ó}|n
      }
   }
   
   add1 = addX(1);
   add2 = addX(2);
   
   << add1 (4); // Imprime 5
   << add2 (4); // Imprime 6

NO FUFA;: SIEMPRE TOMA EL ULTIMO VALOR DE X 
\begin{lstlisting}
   ~ addX (num, X) {
      return num + X;
   }
   
   add4 = P[X=4]addX;
   add8 = P[X=8]addX;
   
   << add4(5);
   << add8(5);
\end{lstlisting}

En ejemplo tictac toe en la doc quitar contatenación << por <.

Hablar sobre dificultades encontradas.
   - Lexicos en conflicto
   - Prioridades de operadores
   - Referencias

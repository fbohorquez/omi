#!/usr/local/bin/omi
/* 
 * Casos booleanos para operaciones sobre cadenas:
 */
<< "-- Concatenación";
<< true . false;
<< false . true;
<< true . true;
<< false . false;
<< "-- Comparación";
<< "#false";
<< true == "";
<< "#false";
<< "" == true;
<< "#true";
<< true == "AAAA";
<< "#true";
<< "AAAA" == true;
<< "#false";
<< true === "";
<< "#false";
<< "" === true;
<< "#false";
<< true === "AAAA";
<< "#false";
<< "AAAAA" === true;
<< "#true";
<< true !== "";
<< "#true";
<< "" !== true;
<< "#true";
<< true !== "AAAA";
<< "#true";
<< "AAAA" !== true;
<< "#false";
<< true < "";
<< "#true";
<< "" < true;
<< "#false";
<< true < "AAAA";
<< "#false";
<< "AAAAA" < true;
<< "#false";
<< true <= "";
<< "#true";
<< "" <= true;
<< "#true";
<< true <= "AAAA";
<< "#true";
<< "AAAAAA" <= true;
<< "#true";
<< true > "";
<< "#false";
<< "" > true;
<< "#false";
<< true > "AAAA";
<< "#false";
<< "AAAA" > true;
<< "#true";
<< true >= "";
<< "#false";
<< "" >= true;
<< "#true";
<< true >= "AAAA";
<< "#true";
<< "AAAA" >= true;
<< "#true";
<< false == "";
<< "#true";
<< "" == false;
<< "#false";
<< false == "AAAA";
<< "#false";
<< "AAAA" == false;
<< "#false";
<< false === "";
<< "#false";
<< "" === false;
<< "#false";
<< false === "AAAA";
<< "#false";
<< "AAAAA" === false;
<< "#true";
<< false !== "";
<< "#true";
<< "" !== false;
<< "#true";
<< false !== "AAAA";
<< "#true";
<< "AAAA" !== false;
<< "#false";
<< false < "";
<< "#false";
<< "" < false;
<< "#true";
<< false < "AAAA";
<< "#false";
<< "AAAAA" < false;
<< "#true";
<< false <= "";
<< "#true";
<< "" <= false;
<< "#true";
<< false <= "AAAA";
<< "#false";
<< "AAAAAA" <= false;
<< "#false";
<< false > "";
<< "#false";
<< "" > false;
<< "#false";
<< false > "AAAA";
<< "#true";
<< "AAAA" > false;
<< "#true";
<< false >= "";
<< "#true";
<< "" >= false;
<< "#false";
<< false >= "AAAA";
<< "#true";
<< "AAAA" >= false;
<< "-- Explode";
<< str_explode (false, true);
<< str_explode (true, true);
<< str_explode (false, true);
<< str_explode (true, false);
<< str_explode ("AbAbAbAbA", false);
<< str_explode ("AbAbAbAbA", true);
<< str_explode ("A1A1A1A1A", true);
<< "-- Implode";
<< "ERROR[";
<< array_implode (true, false);
<< array_implode (false, true);
<< array_implode (false, false);
<< array_implode (true, true);
<< array_implode (false, true);
<< array_implode (true, "A1A1A1A1A");
<< "]";
<< array_implode ({"AbAbAbAbA","A"}, false);
<< array_implode ({"AbAbAbAbA", "A"}, true);
<< "-- Formato";
<< sprintf(true);
<< sprintf(false);
<< sprintf("%i", true);
<< sprintf("%i", false);
<< sprintf("%i %o", false, true);
<< sprintf("%i %x", false, true);
<< "ERROR[";
<< sprintf(true, false);
<< sprintf(false, true);
<< sprintf(true, true);
<< "]";
<< "-- Find";
<< str_find ("BBBB1CCCCC", false);
<< str_find ("BBBB1CCCCC", true);
<< str_find ("BBBB1CCCCC", true);
<< "-- Lower";
<< str_lower (true);
<< str_lower (false);
<< "-- Upper";
<< str_upper (true);
<< str_upper (false);
<< "-- Replace";
<< str_replace (true, true, true);
<< str_replace (true, true, false);
<< str_replace (true, false, true);
<< str_replace (false, true, true);
<< str_replace (false, false, true);
<< "-- Replace Substr";
<< str_replace_sub (true, false, true, false);
<< str_replace_sub (true, false, true, true);
<< str_replace_sub (true, false, true, "X");
<< "ERROR [";
<< str_replace_sub (true, true, true, true);
<< str_replace_sub (true, true, false, true);
<< str_replace_sub (false, false, true, true);
<< str_replace_sub (false, true, false, true);
<< "]";

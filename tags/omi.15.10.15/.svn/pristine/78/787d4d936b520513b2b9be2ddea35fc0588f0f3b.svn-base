/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison interface for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

#ifndef YY_YY_LSHPARSER_H_INCLUDED
# define YY_YY_LSHPARSER_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int yydebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    NUM = 258,
    SNUM = 259,
    REXP = 260,
    STR = 261,
    NULLTOKEN = 262,
    TRUE = 263,
    FALSE = 264,
    ID = 265,
    OP = 266,
    PRINT = 267,
    INC = 268,
    DEC = 269,
    NAMESPACE = 270,
    INCLUDE = 271,
    GLOBAL = 272,
    ISNULL = 273,
    EQL = 274,
    AND_OP = 275,
    OR_OP = 276,
    FUNCTION = 277,
    PARTIALFUNC = 278,
    RET = 279,
    DECORATOR = 280,
    CONTEXTFUNC = 281,
    CLASS = 282,
    NEW = 283,
    CLASSACCESS = 284,
    THIS = 285,
    PARENT = 286,
    PRIVATE = 287,
    STATIC = 288,
    EXTENDS = 289,
    IF = 290,
    ELSE = 291,
    ELSEIF = 292,
    WITH = 293,
    DO = 294,
    WHILE = 295,
    AS = 296,
    OPINC = 297,
    FOR = 298,
    IN = 299,
    GOTO = 300,
    SWITCH = 301,
    CASE = 302,
    DEFAULT = 303,
    TYPEOF = 304,
    SIZEOF = 305,
    DATINFO = 306,
    BREAK = 307,
    EXIT = 308,
    SIZE = 309,
    EMPTY = 310,
    CONTINUE = 311,
    TRY = 312,
    CATCH = 313,
    THROW = 314,
    FLOW = 315,
    ADDASIG = 316,
    SUBASIG = 317,
    PRODASIG = 318,
    DIVASIG = 319,
    POWASIG = 320,
    MODASIG = 321,
    CATASIG = 322,
    IDEN = 323,
    NIDEN = 324,
    EXPLODE = 325,
    IMPLODE = 326,
    SPRINTF = 327,
    FIND = 328,
    REPLACE = 329,
    SUBREPLACE = 330,
    UPPER = 331,
    LOWER = 332,
    DATE = 333,
    TIME = 334,
    SLEEP = 335,
    GETENV = 336,
    REDUCE = 337,
    FTOKEN = 338,
    FPUT = 339,
    FGET = 340,
    FSEEK = 341,
    FEND = 342,
    FCUR = 343,
    FSET = 344,
    FTELL = 345,
    FCLOSE = 346,
    FREAD = 347,
    FWRITE = 348,
    FAPP = 349,
    FORK = 350,
    WAIT = 351,
    GETPID = 352,
    GETPPID = 353,
    PROCESSTOKEN = 354,
    EXITPROCESS = 355,
    SIGNAL = 356,
    SHANDLER = 357,
    INPUT = 358,
    INPUTLINE = 359,
    MATCH = 360,
    REGEXP = 361,
    SEARCH = 362,
    EXEC = 363,
    EVAL = 364,
    ARRAYCHUNK = 365,
    LOAD_MODULE = 366,
    DEF = 367,
    CDATA = 368,
    DDATA = 369,
    SDATA = 370,
    REFDEF = 371,
    REFREL = 372,
    FROM = 373,
    EXIST = 374,
    IDDEF = 375,
    LIKE = 376,
    CINT = 377,
    CFLOAT = 378,
    CBOOL = 379,
    CSTR = 380
  };
#endif
/* Tokens.  */
#define NUM 258
#define SNUM 259
#define REXP 260
#define STR 261
#define NULLTOKEN 262
#define TRUE 263
#define FALSE 264
#define ID 265
#define OP 266
#define PRINT 267
#define INC 268
#define DEC 269
#define NAMESPACE 270
#define INCLUDE 271
#define GLOBAL 272
#define ISNULL 273
#define EQL 274
#define AND_OP 275
#define OR_OP 276
#define FUNCTION 277
#define PARTIALFUNC 278
#define RET 279
#define DECORATOR 280
#define CONTEXTFUNC 281
#define CLASS 282
#define NEW 283
#define CLASSACCESS 284
#define THIS 285
#define PARENT 286
#define PRIVATE 287
#define STATIC 288
#define EXTENDS 289
#define IF 290
#define ELSE 291
#define ELSEIF 292
#define WITH 293
#define DO 294
#define WHILE 295
#define AS 296
#define OPINC 297
#define FOR 298
#define IN 299
#define GOTO 300
#define SWITCH 301
#define CASE 302
#define DEFAULT 303
#define TYPEOF 304
#define SIZEOF 305
#define DATINFO 306
#define BREAK 307
#define EXIT 308
#define SIZE 309
#define EMPTY 310
#define CONTINUE 311
#define TRY 312
#define CATCH 313
#define THROW 314
#define FLOW 315
#define ADDASIG 316
#define SUBASIG 317
#define PRODASIG 318
#define DIVASIG 319
#define POWASIG 320
#define MODASIG 321
#define CATASIG 322
#define IDEN 323
#define NIDEN 324
#define EXPLODE 325
#define IMPLODE 326
#define SPRINTF 327
#define FIND 328
#define REPLACE 329
#define SUBREPLACE 330
#define UPPER 331
#define LOWER 332
#define DATE 333
#define TIME 334
#define SLEEP 335
#define GETENV 336
#define REDUCE 337
#define FTOKEN 338
#define FPUT 339
#define FGET 340
#define FSEEK 341
#define FEND 342
#define FCUR 343
#define FSET 344
#define FTELL 345
#define FCLOSE 346
#define FREAD 347
#define FWRITE 348
#define FAPP 349
#define FORK 350
#define WAIT 351
#define GETPID 352
#define GETPPID 353
#define PROCESSTOKEN 354
#define EXITPROCESS 355
#define SIGNAL 356
#define SHANDLER 357
#define INPUT 358
#define INPUTLINE 359
#define MATCH 360
#define REGEXP 361
#define SEARCH 362
#define EXEC 363
#define EVAL 364
#define ARRAYCHUNK 365
#define LOAD_MODULE 366
#define DEF 367
#define CDATA 368
#define DDATA 369
#define SDATA 370
#define REFDEF 371
#define REFREL 372
#define FROM 373
#define EXIST 374
#define IDDEF 375
#define LIKE 376
#define CINT 377
#define CFLOAT 378
#define CBOOL 379
#define CSTR 380

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 64 "lshParser.y" /* yacc.c:1909  */

  num* fval;
  string* str; 
  idNode* idnode;
  listNode* listnode;
  runNode* data;
  runNode** ref;
  vector<string>* mval;

#line 314 "lshParser.h" /* yacc.c:1909  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


extern YYSTYPE yylval;
extern YYLTYPE yylloc;
int yyparse (void);

#endif /* !YY_YY_LSHPARSER_H_INCLUDED  */

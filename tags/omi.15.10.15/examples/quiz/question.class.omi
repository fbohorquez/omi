#question.class.omi
#=======================================================================
include "option.class.omi";
#=======================================================================
class Question {
   title = "";
   rating = 0;
   options = {};
   ~ Question (title, rating) {
      this->title = title;
      this->rating = rating;
   }
   ~ add_option (option) {
      this->options [(size this->options)] = option;
   }
}
#-----------------------------------------------------------------------
class Text extends Question {
   ~ Text (title, rating) {
      this->Question (title, rating);
   } # No tener que declarar todo constructor si existe jerarquía
   ~ ask () {
      << "";
      << this->title < " (" << this->rating << ")";
      << "Introducir respuesta: ";
      >> ans;
      n = size (this->options);
     // for (i = 0; i < n; ++i) {
       $(n) {
         if (ans == this->options[$]->title)
            return true;
      }
      return false;
   }
}
#-----------------------------------------------------------------------
class MultiChoice extends Question {
   ~ MultiChoice (title, rating) {
      this->Question (title, rating);
   } # No tener que declarar todo constructor si existe jerarquía
   ~ ask () {
      << this->title <. " (" <. this->rating <. ")";
      count = 0; # Hacer un acceso al número de iteración para evitar count!!!!!
      $(this->options) <<  (++count) . " - " . $->title; # < Arreglar prioridad de incremento
      << "Introducir respuesta: ";
      >> ans;
      return (this->options[ans - 1]) && this->options[ans - 1]->correct;
   }
}
#=======================================================================
